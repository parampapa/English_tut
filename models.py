"""
Модуль проекта для взаимосвязи базы данных и приложения.
"""

from flask_login import UserMixin

from app import db, app, manager


class User(db.Model, UserMixin):
    """
    Класс модели пользователя, наследующийся от db.Model и UserMixin. Этот
    класс используется для представления записей пользователей в базе данных.

    Атрибуты:
    id (int): Уникальный идентификатор пользователя, первичный ключ в таблице.
    login (str): Уникальное имя пользователя, максимальная длина - 32 символа.
    password (str): Хэшированный пароль пользователя, максимальная длина - 48
    символов.
    """
    id = db.Column(db.Integer, primary_key=True)
    login = db.Column(db.String(32), unique=True)
    password = db.Column(db.String(48))


with app.app_context():
    """
    Блок кода, который выполняется в контексте приложения. Это означает, что 
    все операции с базой данных будут связаны с текущим экземпляром Flask 
    приложения.

    Функциональность:
        db.create_all() - создает все таблицы в базе данных на основе 
        определений моделей, которые были объявлены до этого момента. Этот 
        метод используется для инициализации или миграции баз данных.
       """
    db.create_all()


@manager.user_loader
def load_user(user_id):
    """
    Функция загрузки пользователя из базы данных.

    Args:
        user_id (int): Идентификатор пользователя, используемый для поиска в
        базе данных.

    Returns:
        User: Возвращает объект пользователя, если он найден.
        None: Возвращает None, если пользователь с таким идентификатором не
        найден.
    """
    return User.query.get(user_id)
